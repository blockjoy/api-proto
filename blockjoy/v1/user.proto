syntax = "proto3";

package blockjoy.v1;

import "blockjoy/common/v1/search.proto";
import "google/protobuf/timestamp.proto";

message User {
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  google.protobuf.Timestamp created_at = 5;
}

// User related services.
service UserService {
  // Retrieve a single user.
  rpc Get(UserServiceGetRequest) returns (UserServiceGetResponse);
  // Retrieve multiple users my means of a filter.
  rpc List(UserServiceListRequest) returns (UserServiceListResponse);
  // Create a single user.
  rpc Create(UserServiceCreateRequest) returns (UserServiceCreateResponse);
  // Update a single user.
  rpc Update(UserServiceUpdateRequest) returns (UserServiceUpdateResponse);
  // Delete a single user.
  rpc Delete(UserServiceDeleteRequest) returns (UserServiceDeleteResponse);
  // Retrieve the settings for a user.
  rpc GetSettings(UserServiceGetSettingsRequest) returns (UserServiceGetSettingsResponse);
  // Modify a setting for a user.
  rpc UpdateSettings(UserServiceUpdateSettingsRequest) returns (UserServiceUpdateSettingsResponse);
  // Delete a setting for a user.
  rpc DeleteSettings(UserServiceDeleteSettingsRequest) returns (UserServiceDeleteSettingsResponse);
}

message UserServiceGetRequest {
  string user_id = 1;
}

message UserServiceGetResponse {
  User user = 1;
}

message UserServiceListRequest {
  // Common search parameters.
  blockjoy.common.v1.Search search = 1;
  // Sort order of the results.
  repeated UserSort sort = 2;
  // If set, only return users in this org.
  optional string org_id = 3;
  // If set, match this email address.
  optional string email = 4;
  // If set, match this name.
  optional string name = 5;
}

message UserSort {
  UserSortField field = 1;
  blockjoy.common.v1.SortOrder order = 2;
}

enum UserSortField {
  USER_SORT_FIELD_UNSPECIFIED = 0;
  USER_SORT_FIELD_EMAIL = 1;
  USER_SORT_FIELD_FIRST_NAME = 2;
  USER_SORT_FIELD_LAST_NAME = 3;
  USER_SORT_FIELD_CREATED_AT = 4;
}

message UserServiceListResponse {
  repeated User users = 1;
  uint64 total = 2;
}

message UserServiceCreateRequest {
  string email = 1;
  string first_name = 2;
  string last_name = 3;
  string password = 4;
}

message UserServiceCreateResponse {
  User user = 1;
}

message UserServiceUpdateRequest {
  string user_id = 1;
  optional string first_name = 2;
  optional string last_name = 3;
}

message UserServiceUpdateResponse {
  User user = 1;
}

message UserServiceDeleteRequest {
  string user_id = 1;
}

message UserServiceDeleteResponse {}

message UserServiceGetSettingsRequest {
  string user_id = 1;
}

message UserServiceGetSettingsResponse {
  map<string, bytes> settings = 1;
}

message UserServiceUpdateSettingsRequest {
  string user_id = 1;
  string key = 2;
  bytes value = 3;
}

message UserServiceUpdateSettingsResponse {
  string key = 1;
  bytes value = 2;
}

message UserServiceDeleteSettingsRequest {
  string user_id = 1;
  string key = 2;
}

message UserServiceDeleteSettingsResponse {}
