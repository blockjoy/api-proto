syntax = "proto3";

package blockjoy.v1;

import "google/protobuf/timestamp.proto";

// The invitation resource. This invites users into organization 
message Invitation {
  // A uuid that uniquely determines the invitation.
  string id = 1;
  // The id of the user that created this invitation.
  string created_by = 2;
  // The full name of the user that created this invitation.
  string created_by_name = 3;
  // The id of the organization the invitee is being invited to.
  string org_id = 4;
  // This is the name of the organization that this invitation has been created
  // for.
  string org_name = 5;
  // The id of the person that is being invited here. Note that this is not the
  // uuid of some user, because the person that is being invited might not have
  // an account (yet).
  string invitee_email = 6;
  // The moment this invitation was created.
  google.protobuf.Timestamp created_at = 7;
  // The status of the invitation, indicating what user action has been taken
  // with this invitation.
  InvitationStatus status = 8;
  // If this invitation has been accepted, this field is set to the moment of
  // acceptance.
  optional google.protobuf.Timestamp accepted_at = 9;
  // If this invitation has been declined, this field is set to the moment of
  // declination.
  optional google.protobuf.Timestamp declined_at = 10;
}

// Manage invitations
service InvitationService {
  // Invite a user into an organization.
  rpc Create(InvitationServiceCreateRequest) returns
    (InvitationServiceCreateResponse);
  // List pending invitations for given org.
  rpc List(InvitationServiceListRequest) returns
    (InvitationServiceListResponse);
  // Accept an invitation and become member of specified organization.
  rpc Accept(InvitationServiceAcceptRequest) returns
    (InvitationServiceAcceptResponse);
  // Decline an invitation.
  rpc Decline(InvitationServiceDeclineRequest) returns
    (InvitationServiceDeclineResponse);
  // Revoke a pending invitation.
  rpc Revoke(InvitationServiceRevokeRequest) returns
    (InvitationServiceRevokeResponse);
}

// The status of an invitation.
enum InvitationStatus {
  INVITATION_STATUS_UNSPECIFIED = 0;
  // This invitation has not been used yet. The user may still accept or decline
  // it.
  INVITATION_STATUS_OPEN = 1;
  // This invitation has been accepted. The user is now a member of the
  // specified organization and this invitation is not useful anymore.
  INVITATION_STATUS_ACCEPTED = 2;
  // This invitation has been declined. This means that the user can no longer
  // use this invitation anymore to join the organization.
  INVITATION_STATUS_DECLINED = 3;
}

// Use this message to create a new invitation.
message InvitationServiceCreateRequest {
  // The id of the person that is being invited here. Note that this is not the
  // uuid of some user, because the person that is being invited might not have
  // an account (yet).
  string invitee_email = 1;
  // The id of the organization that the user is being invited to.
  string org_id = 2;
}

message InvitationServiceCreateResponse {
}

message InvitationServiceListRequest {
  optional string org_id = 1;
  optional string invitee_id = 2;
  optional string created_by = 3;
  optional InvitationStatus status = 4;
}

message InvitationServiceListResponse {
  repeated Invitation invitations = 1;
}

message InvitationServiceAcceptRequest {
  string invitation_id = 1;
}

message InvitationServiceAcceptResponse {
}

message InvitationServiceDeclineRequest {
  string invitation_id = 1;
}

message InvitationServiceDeclineResponse {
}

message InvitationServiceRevokeRequest {
  string invitation_id = 1;
}

message InvitationServiceRevokeResponse {
}
