syntax = "proto3";

package blockjoy.v1;

import "blockjoy/common/v1/resource.proto";
import "google/protobuf/timestamp.proto";

// API key service functionality.
service ApiKeyService {
  rpc Create(ApiKeyServiceCreateRequest) returns (ApiKeyServiceCreateResponse);
  rpc List(ApiKeyServiceListRequest) returns (ApiKeyServiceListResponse);
  rpc Update(ApiKeyServiceUpdateRequest) returns (ApiKeyServiceUpdateResponse);
  rpc Regenerate(ApiKeyServiceRegenerateRequest)
    returns (ApiKeyServiceRegenerateResponse);
  rpc Delete(ApiKeyServiceDeleteRequest) returns (ApiKeyServiceDeleteResponse);
}

message ApiKeyServiceCreateRequest {
  // The (non-unique) label for this api key.
  string label = 1;
  // The scope of the api key.
  ApiKeyScope scope = 2;
}

message ApiKeyServiceCreateResponse {
  // The bearer secret representation of the api key.
  optional string api_key = 1;
  // The time this api key was created.
  google.protobuf.Timestamp created_at = 2;
}

message ApiKeyServiceListRequest {
}

message ApiKeyServiceListResponse {
  // A list of the api keys.
  repeated ListApiKey api_keys = 1;
}

message ListApiKey {
  // The unique identifier to this api key.
  optional string id = 1;
  // The (non-unique) label for this api key.
  optional string label = 2;
  // The scope of this api key.
  ApiKeyScope scope = 3;
  // The time this api key was created.
  google.protobuf.Timestamp created_at = 4;
  // The last time this api key was updated.
  google.protobuf.Timestamp updated_at = 5;
}

message ApiKeyServiceUpdateRequest {
  // The unique identifier to the api key to update.
  string id = 1;
  // The (non-unique) new label for this api key.
  optional string label = 2;
  // The new scope of this api key.
  ApiKeyScope scope = 3;
}

message ApiKeyServiceUpdateResponse {
  // The time the api key was updated.
  google.protobuf.Timestamp updated_at = 1;
}

message ApiKeyServiceRegenerateRequest {
  // The unique identifier to the api key to regenerate.
  string id = 1;
}

message ApiKeyServiceRegenerateResponse {
  // The new bearer secret representation for this api key.
  optional string api_key = 1;
  // The time the api key was updated.
  google.protobuf.Timestamp updated_at = 2;
}

message ApiKeyServiceDeleteRequest {
  // The unique identifier to the api key to delete.
  string id = 1;
}

message ApiKeyServiceDeleteResponse {
}

message ApiKeyScope {
  // The resource scope of this api key.
  blockjoy.common.v1.Resource resource = 1;
  // The resource identifier of this api key.
  optional string resource_id = 2;
}
